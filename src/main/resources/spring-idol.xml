<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd"
       default-init-method="turnOnLights"
       default-destroy-method="turnOffLights">
    <bean id = "sonnet29" class = "kz.pnhz.springidol.Sonnet29" />
    
    <bean id = "poeticDuke" class = "performers.PoeticJuggler">
        <constructor-arg value="15" />
        <!--<constructor-arg ref="sonnet29" />-->
        <constructor-arg>
            <bean class="kz.pnhz.springidol.Sonnet29"/>
        </constructor-arg>
    </bean>
    
    <bean id="theStage"
          class="kz.pnhz.springidol.Stage"
          factory-method="getInstance" />
    
    <bean id = "ticket" class="kz.pnhz.springidol.Ticket" scope="prototype" />
    
    <bean id="auditorium"
          class="kz.pnhz.springidol.Auditorium"
          init-method="turnOnLights"
          destroy-method="turnOffLights"/>
    
    <!--<bean id="kenny"
      class="kz.pnhz.springidol.Instrumentalist" > 
    <property name="song" value="Jingle Bells" /> -->
    <!--<property name="instrument" ref="saxophone"/>-->
    <!--    <property name="instrument">
            <bean class="kz.pnhz.springidol.Saxophone"/>
        </property>
    </bean>-->
    
    <!--    <bean id="kenny"
    class="performers.Instrumentalist" 
    p:song = "#{'Jingle Bells'}"
    p:instrument-ref = "saxophone" />-->
    
    <!--    <bean id="kenny"
          class="performers.Instrumentalist" 
          p:song = "#{'Jingle Bells'}">    
        <property name="instrument" value="#{saxophone}"/>
    </bean>-->
    
    <bean id="kenny"
          parent="baseSaxophonist"/>    
    
    <bean id="david"
          parent="baseSaxophonist"/>    
    
    <bean id="franc"
          parent="baseSaxophonist">
        <property name="song" value="Mary had a little lamb" />
    </bean>
    
    <bean id="baseSaxophonist" 
          class="performers.Instrumentalist" 
          abstract="true" 
          p:song = "#{'Jingle Bells'}">
        <property name="instrument" value="#{saxophone}"/>
    </bean>
    
    <bean id="carl"
          class="performers.Instrumentalist" > 
        <property name="song" value="#{kenny.song}" />
        <!--<property name="song" value="#{songSelector.selectSong()?.toUpperCase()}"/>-->
        <!--        <property name="song" value="#{kenny.song ?: 'Greensleeves'}"/>-->
        <!--        <property name="instrument"
        value="#{songSelector.selectSong()=='Jingle Bells'?piano:saxophone}"/>-->
        <property name="instrument" value="#{kenny.getInstrument()}"/>
        <!--        <property name="multiplier" value="#{T(java.lang.Math).PI}"/>
        <property name="randomNumber" value="#{T(java.lang.Math).random()}"/>-->
    </bean>
    
    <bean id="pianist"
          class="performers.Instrumentalist" abstract="true"> 
        <property name="song" value="Chopstiks" />
        <property name="instrument">
            <bean class="instruments.Piano"/>
        </property>
    </bean>
    
    <bean id="saxophone" class="instruments.Saxophone">
    </bean>
    
    <!--<bean id="hank"
          class="performers.OneManBand">
        <property name="instruments">
            <list>
                <ref bean="guitar" />
                <ref bean="cymbal" />
                <ref bean="harmonica" />
            </list>
        </property>
    </bean>-->
    
    <!--    <bean id="hank"
          class="performers.OneManBand">
        <property name="instruments">
            <set>
                <ref bean="guitar" />
                <ref bean="cymbal" />
                <ref bean="harmonica" />
                <ref bean="harmonica" />
            </set>
        </property>
    </bean>-->
    
    <!--    <bean id="hank"
          class="performers.OneManBand">
        <property name="instruments">
            <map>
                <entry key="GUITAR" value-ref="guitar" />
                <entry key="CYMBAL" value-ref="cymbal" />
                <entry key="HARMONICA" value-ref="harmonica" />
            </map>
        </property>
    </bean>-->
    
    <bean id="hank"
          class="performers.OneManBand">
        <property name="instruments">
            <props>
                <prop key="GUITAR"> STRUM STRUM STRUM</prop>
                <prop key="CYMBAL"> CRASH CRASH CRASH</prop>
                <prop key="HARMONICA"> HUM HUM HUM</prop>
            </props>
        </property>
        <property name="someNonNullProperty">
            <null/>
        </property>
    </bean>
    
    <bean id="guitar" class="instruments.Guitar">
    </bean>
    
    <bean id="cymbal" class="instruments.Cymbal">
    </bean>
    
    <bean id="harmonica" class="instruments.Harmonica">
    </bean>
    
    <bean id="basePerformer" abstract="true">
        <property name="song" value="Somewhere Over the Rainbow" />
    </bean>
    
    <bean id="taylor" class="performers.Vocalist" parent="basePerformer">
    </bean>
    
    <bean id="stevie" class="performers.Instrumentalist" parent="basePerformer">
        <property name="instrument" ref="guitar"/>
    </bean>
    
    <bean id="stevie2" class="performers.AbsInstrumentalist" >
        <lookup-method name="getInstrument" bean="guitar" />
        <property name="song" value="Greensleeves" />
    </bean>
    
    <!--    <bean id="stevie" class="performers.Instrumentalist" parent="basePerformer">
        <lookup-method name="getInstrument" bean="guitar" />
    </bean>-->
    
    <bean id="harry" class="performers.Magical">
        <property name="magicBox" ref="magicBox" />
        <property name="magicWords" value="Bippity boppity boo" />
    </bean>
    
    <bean id="magicBox" class="kz.pnhz.springidol.MagicBoxImpl">
        <replaced-method
            name="getContents"
            replacer="tigerReplacer" />
    </bean>
    
    <bean id="tigerReplacer" class="kz.pnhz.springidol.TigerReplacer">
    </bean>
    
<!--    <bean id="infoPhone" class="propeditor.PhoneNumber">
        <constructor-arg value="888" /> 
        <constructor-arg value="555" />
        <constructor-arg value="1212" />
    </bean>-->
    
<!--    <bean id="contract" class="propeditor.Contract">
        <prproperty name="phoneNumber" value="888-555-1212" />
    </bean>
    
    <bean
        class="org.springframework.beans.factory.config.Ð¡ustomEditorConfigurer">
        <property name="customEditors">
            <map>
                <entry key="propeditor.PhoneNumber">
                    <bean id="phoneEditor"
                          class="propeditor.PhoneEditor">
                    </bean>
                </entry>
            </map>
        </property>
    </bean>-->
    
<!--    <bean class="postProcessor.Fuddifier" />
    <bean id="bags" class="postProcessor.Rabbit">
        <property name="description" value="That rascelly rabbit!" />
    </bean>-->
    
    <bean id="beanCounter" class="postProcessor.BeanCounter" />
    
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="${driver-class}" />
        <property name="url" value="${ds.url}" />
        <property name="username" value="${ds.username}" />
        <property name="password" value="${ds.password}" />
        <property name="validationQuery" value="select 1" />
        <property name="maxWait" value="20000" />
    </bean>
    
    <!--    <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>jdbc.properties</value>
                <value>security.properties</value>
                <value>application.properties</value>
            </list>
        </property>
    </bean>-->
    
    <bean id="messageSource"
          class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basename">
            <value>trainingtext</value>
        </property>
    </bean>
    
    <bean id="course" class="foo.Course" />
    <bean id="refreshListener" class="foo.RefreshListener" />
    
    <bean id="cronTriggerBean" class="sheduling.CronTriggerBean" />
</beans>

<!--<bean id = "duke" class = "kz.pnhz.springidol.Junggler" /> -->
